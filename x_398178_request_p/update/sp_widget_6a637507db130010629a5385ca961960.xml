<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($rootScope, $scope, $http, StoreService ) {
  /* widget controller */
  var c = this;
	
	// Set Widget(s)
	$scope.listWidget = c.data.listWidget;
	$scope.buttonWidget = c.data.buttonBarWidget;
	$scope.formWidget = c.data.formWidget;
	
	// Set Store Variables
	$scope.state = '';
	$scope.data = {
		tableName : 'x_398178_request_p_roadster',
		tableLabel:'Roadster Requests',
		url: '/api/now/table/',
		query: '^ORDERBYsys_updated_on^ORDERBYDESCsys_updated_on',
		queryLimit : 10,
		modelGroup: [
			{name: 'sys_id', label:'sys_id', type:'text', visible: false},
			{name:'number',label: 'Number', type:'text', link: true, visible: true, disabled: true },
			{name: 'short_description', label:'Short Description', type:'text', visible: true },
			//{name: 'roadster_requested_for', label:'Requested For', type:'lookup', visible: true },
			//{name: 'support_type', label:'Support Type', type:'select', visible: true },
			{name: 'sys_updated_on', label:'Updated', type:'date', visible: true },
			{name: 'sys_updated_by', label:'Updated By', type:'date', visible: true }
		],
		buttons: [
			{name: 'Submit', label: 'Submit', cls:'primary', icon:"floppy-disk", states:['new']},
			{name: 'Update', label: 'Update', cls:'primary', icon:"floppy-disk", states:['edit']},
			//{name: 'Approve', label: 'Approve', cls:'success', icon:"ok", states:['edit']},
			//{name: 'Reject', label: 'Reject', cls:'danger', icon:"remove", states:['edit']},
			{name: 'Cancel', label: 'Cancel', cls:'default', icon:"remove", states:['new','edit']}
		]
	}
	
	// Subscriptions
	$rootScope.$broadcast('set-store', $scope.data);
	
	$rootScope.$on('store', function(evt,data){
		$scope.state = data.state;
		$scope.model = data.model;
		console.log('roadster_widget',data);
	});
	
	$rootScope.$on('button-click', function(evt,button){
		switch (button.name){
			case 'New': $scope.add(); break;
			case 'Submit': $scope.submit(); break;
			case 'Update': $scope.update(); break;	
			case 'Cancel': $scope.reset(); break;
			default: break;
		}
	});

	$rootScope.$on('record-click', function(evt,id){
		$scope.getRequest(id);
	});
	
	// Local Scope functions	
	$scope.modelGroupKeys = $scope.data.modelGroup.map(function(group){ return group.name; });
	
	$scope.select = function(sys_id){ $scope.getRequest(sys_id);}
	
	$scope.reset = function(){
		$rootScope.$broadcast('set-store', {
			model:{},
			state: ''
		});
	}
	
	$scope.add = function(){
		$rootScope.$broadcast('set-store', {
			model:{},
			state:'new'
		});
	}
	
	$scope.submit = function(){
		$scope.createRequest($scope.model);
	}
	
	$scope.refresh = function(){
		$scope.getRequests();
	}
	
	$scope.update = function(){
		$scope.updateRequest($scope.model);
	}
	
	$scope.getRequest = function(id){
		$rootScope.$broadcast('getById',{
			id:id
		});
	}
		
	$scope.getRequests = function(){
		$rootScope.$broadcast('get',{});
	}
	
	$scope.createRequest = function(data){
			$rootScope.$broadcast('post',{
			body:data
		});
	}
	
	$scope.updateRequest = function(data){
			$rootScope.$broadcast('patch',{
				body:$scope.reduceModel(data)
		});
	}
	
	$scope.reduceModel = function(model){
		var obj = {};
		$scope.modelGroupKeys.map(function(key){
			obj[key] = model[key];
		});
		return obj;
	}

	
	$scope.getRequests();
	
	
}]]></client_script>
        <controller_as>c</controller_as>
        <css>

.parent {
	display: flex;
  flex-direction:row;
}

.item {
	flex-grow:1;
  margin: 10px;
}

.item_basis {
	flex-basis: 50px;
}

</css>
        <data_table>sp_instance_table</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>short_description,sys_mod_count</field_list>
        <has_preview>true</has_preview>
        <id>roadster_widget</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Roadster Widget</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

	data.listWidget = $sp.getWidget('ng-list');
	data.buttonBarWidget = $sp.getWidget('ng-button-bar');
	data.formWidget = $sp.getWidget('ng-form');
	
    
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-03-06 16:28:34</sys_created_on>
        <sys_id>6a637507db130010629a5385ca961960</sys_id>
        <sys_mod_count>204</sys_mod_count>
        <sys_name>Roadster Widget</sys_name>
        <sys_package display_value="Request Processing" source="x_398178_request_p">a1e00611db0b0010629a5385ca9619bc</sys_package>
        <sys_policy/>
        <sys_scope display_value="Request Processing">a1e00611db0b0010629a5385ca9619bc</sys_scope>
        <sys_update_name>sp_widget_6a637507db130010629a5385ca961960</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-03-09 02:55:25</sys_updated_on>
        <template><![CDATA[

<div class="parent">
  
  	<div class="item">
       <sp-widget widget="listWidget" ></sp-widget>
    </div>
    
    <div ng-if="state == 'new' || state == 'edit'" class="item item_basis">
      <div class="panel panel-default">
        <div class="panel-heading">
           {{ data.tableLabel }} Record
        </div>
        <div class="panel-body">
          <sp-widget widget="buttonWidget"></sp-widget>
      		<sp-widget widget="formWidget"></sp-widget> 
        </div>
    	</div>
   </div>
  
   <div ng-if="state == 'submitted'" class="item item_basis">
       <div class="panel panel-default">
        <div class="panel-heading">
           {{ data.tableLabel }} Record
        </div>
        <div class="panel-body" style="text-align: center">
          <p>
            Item Submitted!
          </p>
          <p>
            {{ model.number }}
          </p>
         </div>
    </div>
  </div>
  
   <div ng-if="state == 'updated'" class="item item_basis">
      <div class="panel panel-default">
        <div class="panel-heading">
           {{ data.tableLabel }} Record
        </div>
        <div class="panel-body" style="text-align: center">
          <p>
            Item Saved!
          </p>
          <p>
            {{ model.number }}
          </p>
         </div>
    </div>
    </div>
   
</div>
  
 
  
  

  ]]></template>
    </sp_widget>
</record_update>
